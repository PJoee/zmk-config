/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUM 		1
#define NAV 		2
#define SYM 		3
#define FUN 		4

&left_encoder   { resolution = <2>; };

// Uncomment this block if using RGB
/*
* &led_strip {
*    chain-length = <6>;
*    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
*    // chain-length = <25>; // Uncomment if using only per-key LEDs.
} ;
*/
/ {
	keymap {
		compatible = "zmk,keymap";

/*
 * Base Layer: QWERTY
 *
 * ,-------------------------------------------.                              ,-------------------------------------------.
 * | TAB  |   Q |   W  |   E  |   R  |   T  |                                 |   Y  |   U  |   I  |   O  |   P  |        |
 * |		  |     |      |      |      |      |      		 			                  |      |      |      |      |      |        |
 * |--------+------+------+------+------+------|                              |------+------+------+------+------+--------|
 * | LSFT |   A  |   S  |  D   |   F  |   G  |                                |   H  |   J  |   K  |   L  | ;  : |  ' "   |
 * |		  |      |      |      |      |      |                  			        |      |      |      |      |      |        |
 * |--------+------+------+------+------+------+-------------.  ,-------------+------+------+------+------+------+--------|
 * | LCTL |   Z  |   X  |   C  |   V  |   B  |RAISE | ESC	   |  |Adjust|LOWER |   N  |   M  | ,  < | . >  | /  ? |        |
 * |    	|      |      |      |      |      |      |        |  |      |      |      |      |      |      |      |        |
 * `----------------------+------+------+------+------+------|  |------+------+------+------+------+----------------------'
 *                        | F23  | LALT |LOWER | SPACE| DEL  |  | BSPC | Space|RAISE | LGUI | F24  |
 *                        |      |      |      |      |      |  |      |      |      |      |      |
 *                        `----------------------------------'  `----------------------------------'
 */
		default_layer {
			bindings = <
&kp TAB   		&kp Q 	&kp W 	&kp E 		&kp R 		&kp T                       	               	      &kp Y 	  &kp U  	&kp I 		&kp O 		  &kp P		  &trans
&kp LSHFT 		&kp A 	&kp S 	&kp D 		&kp F 		&kp G                   	                   	      &kp H 	  &kp J  	&kp K 		&kp L 		  &kp SEMI 	&kp SQT
&kp LCTRL 	 	&kp Z 	&kp X 	&kp C 		&kp V 	  &kp B     &lt NUM RET &kp ESC   &mo FUN &mo SYM     &kp N     &kp M 	&kp COMMA &kp PERIOD 	&kp SLASH &kp LGUI
								              &kp F23 	&kp LALT	&kp SPACE &mo NUM     &mo NAV   &mo NUM	&lt SYM RET &kp BSPC	&kp DEL	&kp F24
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
/*
 * MO Layer: Num
 */
		numbers {
			bindings = <
&trans	&kp PIPE	&kp N1		&kp N2		&kp N3		&kp PLUS 												                &trans 	&trans 	&trans 	&trans 	&trans 	&trans
&trans	&kp SEMI	&kp N4 		&kp N5 		&kp N6 		&kp MINUS 													            &trans 	&trans 	&trans 	&trans 	&trans 	&trans
&trans 	&kp BSLH	&kp N7	 	&kp N8	 	&kp N9		&kp EQUAL 	&trans	&trans			&trans	&trans	&trans	&trans 	&trans	&trans	&trans	&trans
								            &trans 		&trans 		&kp N0 		  &trans 	&trans    	&trans  &trans  &trans 	&trans 	&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		
/*
 * MO Layer: Nav
 */
		nav {
			bindings = <
&trans 	&trans 	&trans 	&trans 	&trans 	&trans 														    &kp HOME      &kp PG_DN &kp PG_UP &kp END 	&kp LC(Z) &trans
&trans 	&trans 	&trans 	&trans 	&trans 	&trans 														    &kp LEFT 		  &kp DOWN 	&kp UP  	&kp RIGHT &kp CAPS 	&trans
&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans  &trans &trans &kp LC(LS(Z)) &kp LC(V) &kp LC(C) &kp LC(X)	&kp INS		&trans
						            &trans 	&trans 	&trans 	&trans 	&trans 	&trans &trans &trans 			  &trans 		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
/*
 * MO Layer: Symbols
 */
		symbols {
			bindings = <
&kp TILDE &kp LBRC	&kp EXCL 	&kp AT_SIGN &kp POUND 	&kp RBRC 														    &trans 	&trans 	&trans 	&trans 	&trans 	&trans
&kp GRAVE	&kp	LPAR	&kp DLLR 	&kp PRCNT 	&kp CARET 	&kp RPAR 														    &trans 	&trans 	&trans 	&trans 	&trans 	&trans
&trans 	  &kp LBKT	&kp AMPS 	&kp ASTRK 	&kp MINUS 	&kp RBKT	&trans 	&trans  &trans &trans &trans 	&trans 	&trans 	&trans 	&trans 	&trans
									            &trans 		  &trans 		  &trans 		&trans 	&trans 	&trans &trans &trans 	&trans 	&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

/*
 * MO Layer: Fun
 */
		fun {
			bindings = <
&trans 	&kp F10 &kp F1 	&kp F2 	&kp F3 	&kp PSCRN 																	&bt BT_CLR	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2 	&rgb_ug RGB_TOG &trans
&trans 	&kp F11 &kp F4 	&kp F5 	&kp F6 	&kp SLCK																	&trans 		&trans 			&trans 			&trans 			&trans 			&trans
&trans 	&kp F12 &kp F7 	&kp F8 	&kp F9 	&kp PAUSE_BREAK	&kp C_AL_CALC 	&trans						&trans &trans 	&trans 		&trans 			&trans 			&trans 			&trans 			&trans
						&trans 	&trans 	&trans 			&trans 			&trans 						&trans &trans 	&trans 		&trans 			&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

/*
* Layer template
*
* ,-------------------------------------------.                              ,-------------------------------------------.
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |--------+------+------+------+------+------|                              |------+------+------+------+------+--------|
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |--------+------+------+------+------+------+-------------.  ,-------------+------+------+------+------+------+--------|
* |        |      |      |      |      |      |      |      |  |      |      |      |      |      |      |      |        |
* |        |      |      |      |      |      |      |      |  |      |      |      |      |      |      |      |        |
* `----------------------+------+------+------+------+------|  |------+------+------+------+------+----------------------'
*                        |      |      |      |      |      |  |      |      |      |      |      |
*                        |      |      |      |      |      |  |      |      |      |      |      |
*                        `----------------------------------'  `----------------------------------'
*
*
*		nothing {
*			bindings = <
*	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 														&trans 	&trans 	&trans 	&trans 	&trans 	&trans
*	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 														&trans 	&trans 	&trans 	&trans 	&trans 	&trans
*	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans						&trans &trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans
*							&trans 	&trans 	&trans 	&trans 	&trans 						&trans &trans 	&trans 	&trans 	&trans
*			>;
*			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
*		};
*/

	};
};
