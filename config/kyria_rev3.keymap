/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 	0
#define NAV 		1
#define NUM 		2
#define SYM 		3
#define FUN 		4
#define GAMING		5

&sensors {
    left_config {
        triggers-per-rotation = <2>;
    };

    right_config {
        triggers-per-rotation = <2>;
    };
};

// Uncomment this block if using RGB
/*
* &led_strip {
*    chain-length = <6>;
*    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
*    // chain-length = <25>; // Uncomment if using only per-key LEDs.
} ;
*/
/ {
	behaviors {
        	vol_encoder: vol_encoder {
            		compatible = "zmk,behavior-sensor-rotate";
            		#sensor-binding-cells = <0>;
            		bindings = <&inc_dec_kp C_VOL_UP>, <&inc_dec_kp C_VOL_DN>;
        	};
    	};

/* 
* KEYMAP 
*/
	keymap {
		compatible = "zmk,keymap";

/*
 * Base Layer: QWERTY
 *
 * ,-------------------------------------------.                              ,-------------------------------------------.
 * | TAB  |   Q |   W  |   E  |   R  |   T  |                                 |   Y  |   U  |   I  |   O  |   P  |   ESC  |
 * |--------+------+------+------+------+------|                              |------+------+------+------+------+--------|
 * | LSFT |   A  |   S  |  D   |   F  |   G  |                                |   H  |   J  |   K  |   L  | ;  : |  ' "   |
 * |--------+------+------+------+------+------+-------------.  ,-------------+------+------+------+------+------+--------|
 * | LCTL |   Z  |   X  |   C  |   V  |   B  |RAISE | ESC	 |  |Adjust|LOWER |   N  |   M  | ,  < | . >  | /  ? |        |
 * `----------------------+------+------+------+------+------|  |------+------+------+------+------+----------------------'
 *                        | F23  | LALT |LOWER | SPACE| DEL  |  | BSPC | Space|RAISE | LGUI | F24  |
 *                        `----------------------------------'  `----------------------------------'
 */
		default_layer {
			bindings = <
&kp TAB  	&kp Q 		&kp W 		&kp E 		&kp R 		&kp T               	        	        	       	      	&kp Y 		&kp U  		&kp I 		&kp O 		&kp P		&trans
&kp LSHFT 	&kp A 		&kp S 		&kp D 		&kp F 		&kp G           	        	   	                	&kp H 		&kp J  		&kp K 		&kp L 		&kp SEMI 	&kp SQT
&kp LCTRL 	&kp Z 		&kp X 		&kp C		&kp V 	  	&kp B		&to GAMING	&trans	/**/	&trans 	&trans		&kp N   	&kp M 		&kp COMMA 	&kp PERIOD	&kp SLASH 	&kp LGUI
						&kp F23 	&lt LALT ESC	&lt NAV TAB 	&kp SPACE  	&trans	/**/	&trans	&lt SYM RET	&lt NUM BSPC	&lt FUN DEL	&kp F24	
			>;
			sensor-bindings = <&vol_encoder &vol_encoder>;
		};

/*
 * MO Layer: Nav
 */
		nav {
			bindings = <
&trans		&trans 		&trans 		&trans 		&trans 		&trans 									&trans 		&trans		&trans		&trans		&trans		&trans
&trans 		&kp LGUI	&kp LALT	&kp LCTRL 	&kp LSHFT 	&trans 									&kp CAPS	&kp LEFT 	&kp DOWN 	&kp UP	 	&kp RIGHT	&trans
&trans 		&trans 		&trans 		&trans 		&trans 		&trans 		&trans 		&trans	/**/	&trans 	&trans		&kp INS		&kp HOME	&kp PG_DN	&kp PG_UP	&kp END		&trans
						&trans 		&trans 		&trans 		&trans 		&trans	/**/	&trans 	&trans 		&trans 		&trans 		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

/*
 * MO Layer: Num
 */
		numbers {
			bindings = <
&trans		&kp LBKT	&kp N7		&kp N8		&kp N9		&kp RBKT 								&trans 		&trans		&trans 		&trans 		&trans 		&trans
&trans		&kp SEMI	&kp N4 		&kp N5 		&kp N6 		&kp EQUAL 								&trans 		&kp RSHIFT 	&kp RCTRL 	&kp RALT	&kp RGUI 	&trans
&trans 		&kp GRAVE	&kp N1	 	&kp N2	 	&kp N3		&kp BSLH 	&trans		&trans 	/**/	&trans	&trans		&trans		&trans 		&trans		&trans		&trans		&trans
						&trans 		&kp DOT		&kp N0 		&kp MINUS 	&trans 	/**/	&trans  &trans  	&trans 		&trans 		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		
/*
 * MO Layer: Sym
 */
		symbols {
			bindings = <
&trans		&kp LBRC	&kp AMPS 	&kp STAR	&kp LPAR 	&kp RBRC 								&trans 		&trans 		&trans 		&trans 		&trans 		&trans
&trans		&kp COLON	&kp DLLR 	&kp PRCNT 	&kp CARET 	&kp PLUS 								&trans 		&kp RSHIFT 	&kp RCTRL 	&kp RALT	&kp RGUI 	&trans
&trans 	  	&kp TILDE	&kp EXCL 	&kp AT	 	&kp POUND 	&kp PIPE	&trans 		&trans	/**/	&trans 	&trans 		&trans 		&trans 		&trans 		&trans 		&trans 		&trans
						&kp LPAR	&kp LPAR	&kp UNDER	&trans 		&trans	/**/	&trans 	&trans 		&trans		&trans		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

/*
 * MO Layer: Fun
 */
		fun {
			bindings = <
&trans 		&kp F12 	&kp F7 		&kp F8 		&kp F9 		&kp PSCRN 								&bt BT_CLR	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2 	&rgb_ug RGB_TOG &trans
&trans 		&kp F11 	&kp F4 		&kp F5 		&kp F6 		&kp SLCK								&trans		&kp RSHIFT	&kp RCTRL 	&kp RALT	&kp RGUI 	&trans
&trans 		&kp F10 	&kp F1 		&kp F2 		&kp F3 		&kp PAUSE_BREAK	&trans 		&trans	/**/	&trans 	&trans 		&trans 		&trans 		&trans 		&trans 		&trans 		&trans
						&trans 		&trans 		&trans 		&trans 		&trans	/**/	&trans 	&trans 		&trans 		&trans 		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

/*
 * Base Layer: GAMING
 */
		gaming {
			bindings = <
&kp T   	&kp TAB		&kp Q 		&kp W 		&kp E 		&kp R               	        		              		&kp Y 		&kp U  		&kp I 		&kp O 		&kp P		&trans
&kp G	 	&kp LSFT	&kp A 		&kp S 		&kp D 		&kp F           	        		              		&kp H 		&kp J  		&kp K 		&kp L 		&kp SEMI 	&kp SQT
&kp B	 	&kp LCTL	&kp Z 		&kp X		&kp C 	  	&kp V		&to DEFAULT	&trans	/**/	&trans 	&trans		&kp N   	&kp M 		&kp COMMA 	&kp PERIOD	&kp SLASH 	&kp LGUI
						&kp F23 	&kp ESC		&lt NAV TAB 	&kp SPACE  	&trans	/**/	&trans	&lt SYM RET	&lt NUM BSPC	&lt FUN DEL	&kp F24	
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

/*
* Layer template
*
* ,-------------------------------------------.                              ,-------------------------------------------.
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |--------+------+------+------+------+------|                              |------+------+------+------+------+--------|
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |        |      |      |      |      |      |                              |      |      |      |      |      |        |
* |--------+------+------+------+------+------+-------------.  ,-------------+------+------+------+------+------+--------|
* |        |      |      |      |      |      |      |      |  |      |      |      |      |      |      |      |        |
* |        |      |      |      |      |      |      |      |  |      |      |      |      |      |      |      |        |
* `----------------------+------+------+------+------+------|  |------+------+------+------+------+----------------------'
*                        |      |      |      |      |      |  |      |      |      |      |      |
*                        |      |      |      |      |      |  |      |      |      |      |      |
*                        `----------------------------------'  `----------------------------------'
*
*
*		nothing {
*			bindings = <
*	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 										&trans 	&trans 	&trans 	&trans 	&trans 	&trans
*	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 										&trans 	&trans 	&trans 	&trans 	&trans 	&trans
*	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans						&trans &trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans
*				&trans 	&trans 	&trans 	&trans 	&trans 						&trans &trans 	&trans 	&trans 	&trans
*			>;
*			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
*		};
*/

	};
};
